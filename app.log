2025-10-29 04:58:52,046 - logging_config - INFO - REQUEST - ID: 3b8263d0-3c26-4337-a34a-7e9ea0921868 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:52,239 - logging_config - INFO - RESPONSE - ID: 3b8263d0-3c26-4337-a34a-7e9ea0921868 | Status: 200 | Processing Time: 974ms
2025-10-29 04:58:54,894 - logging_config - INFO - REQUEST - ID: c4ffb2c7-a711-4ce9-985a-66e85a54fab1 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 04:58:55,218 - logging_config - INFO - RESPONSE - ID: c4ffb2c7-a711-4ce9-985a-66e85a54fab1 | Status: 200 | Processing Time: 321ms
2025-10-29 04:58:56,842 - logging_config - INFO - REQUEST - ID: 31f38179-8329-4bef-ad4f-280e1bf1ffb4 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:57,026 - logging_config - INFO - REQUEST - ID: 93c3d882-5d36-4fec-b5f4-1438dbab7620 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:57,211 - logging_config - INFO - REQUEST - ID: c493e52c-2000-4dfe-86df-e5b2e0dd4e80 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:57,400 - logging_config - INFO - REQUEST - ID: 28fa7094-9efe-453b-9d5a-d678f1e1115a | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:57,596 - logging_config - INFO - RESPONSE - ID: 31f38179-8329-4bef-ad4f-280e1bf1ffb4 | Status: 200 | Processing Time: 750ms
2025-10-29 04:58:57,790 - logging_config - INFO - RESPONSE - ID: 93c3d882-5d36-4fec-b5f4-1438dbab7620 | Status: 200 | Processing Time: 760ms
2025-10-29 04:58:57,975 - logging_config - INFO - RESPONSE - ID: c493e52c-2000-4dfe-86df-e5b2e0dd4e80 | Status: 200 | Processing Time: 763ms
2025-10-29 04:58:58,161 - logging_config - INFO - RESPONSE - ID: 28fa7094-9efe-453b-9d5a-d678f1e1115a | Status: 200 | Processing Time: 763ms
2025-10-29 04:58:58,357 - logging_config - INFO - REQUEST - ID: 97043133-9f2d-48d6-bfab-6105f41fc0b9 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:58,553 - logging_config - INFO - REQUEST - ID: 7d6f4b6d-f3ff-4cae-937a-d81530fba585 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 04:58:58,590 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 04:58:59,516 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 04:58:59,564 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 04:58:59,754 - logging_config - INFO - RESPONSE - ID: 97043133-9f2d-48d6-bfab-6105f41fc0b9 | Status: 200 | Processing Time: 1401ms
2025-10-29 04:58:59,940 - logging_config - INFO - RESPONSE - ID: 7d6f4b6d-f3ff-4cae-937a-d81530fba585 | Status: 200 | Processing Time: 1392ms
2025-10-29 04:59:00,139 - logging_config - INFO - REQUEST - ID: 7bb8b749-d340-4e4e-bf1b-36fccaade35e | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 04:59:00,336 - logging_config - INFO - REQUEST - ID: d222a258-6064-4d68-a236-0eb061a496c4 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 04:59:00,344 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 04:59:01,277 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 04:59:01,324 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 04:59:01,513 - logging_config - INFO - RESPONSE - ID: 7bb8b749-d340-4e4e-bf1b-36fccaade35e | Status: 200 | Processing Time: 1378ms
2025-10-29 04:59:01,714 - logging_config - INFO - RESPONSE - ID: d222a258-6064-4d68-a236-0eb061a496c4 | Status: 200 | Processing Time: 1379ms
2025-10-29 04:59:02,845 - logging_config - INFO - REQUEST - ID: 418124af-f751-4f1d-998f-f22f91d26a04 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 04:59:03,028 - logging_config - INFO - RESPONSE - ID: 418124af-f751-4f1d-998f-f22f91d26a04 | Status: 200 | Processing Time: 187ms
2025-10-29 04:59:03,216 - logging_config - INFO - REQUEST - ID: 2532b4f6-fb5d-44ac-a344-26f9d4d6da82 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 54 bytes
2025-10-29 04:59:03,222 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production data...
2025-10-29 04:59:03,222 - logging_config - ERROR - SQL Generation Error - User: fdwarren@gmail.com | Error: RedFiveCore.generate_sql() missing 1 required positional argument: 'history'
Traceback (most recent call last):
  File "/Users/fredwarren/Projects/redfive/src/main.py", line 229, in generate_sql_endpoint
    response = core.generate_sql(request.query)
TypeError: RedFiveCore.generate_sql() missing 1 required positional argument: 'history'
2025-10-29 04:59:03,418 - logging_config - INFO - RESPONSE - ID: 2532b4f6-fb5d-44ac-a344-26f9d4d6da82 | Status: 500 | Processing Time: 193ms
2025-10-29 04:59:56,476 - logging_config - INFO - REQUEST - ID: 9c8a3b04-4e6d-42be-9ec2-66d8a0353aff | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 04:59:56,666 - logging_config - INFO - RESPONSE - ID: 9c8a3b04-4e6d-42be-9ec2-66d8a0353aff | Status: 200 | Processing Time: 997ms
2025-10-29 04:59:58,928 - logging_config - INFO - REQUEST - ID: f6db3cca-cd99-402e-a5cb-7a6e2e62d9bc | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 04:59:59,243 - logging_config - INFO - RESPONSE - ID: f6db3cca-cd99-402e-a5cb-7a6e2e62d9bc | Status: 200 | Processing Time: 314ms
2025-10-29 05:00:00,880 - logging_config - INFO - REQUEST - ID: 05601215-fab1-40e5-b88f-2e0036140851 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:01,067 - logging_config - INFO - REQUEST - ID: 64eda8ce-2599-472a-ba91-58f2448d0f7a | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:01,256 - logging_config - INFO - REQUEST - ID: 015d5b34-1ed0-43e5-8865-e72e2237cd09 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:01,444 - logging_config - INFO - RESPONSE - ID: 05601215-fab1-40e5-b88f-2e0036140851 | Status: 200 | Processing Time: 580ms
2025-10-29 05:00:01,630 - logging_config - INFO - REQUEST - ID: 9827f921-09e5-4f15-a413-2f9eed410c5a | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:01,824 - logging_config - INFO - RESPONSE - ID: 64eda8ce-2599-472a-ba91-58f2448d0f7a | Status: 200 | Processing Time: 750ms
2025-10-29 05:00:02,028 - logging_config - INFO - RESPONSE - ID: 015d5b34-1ed0-43e5-8865-e72e2237cd09 | Status: 200 | Processing Time: 758ms
2025-10-29 05:00:02,225 - logging_config - INFO - REQUEST - ID: 055c0168-3060-4f52-8c2d-c8ea58f89647 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:02,423 - logging_config - INFO - RESPONSE - ID: 9827f921-09e5-4f15-a413-2f9eed410c5a | Status: 200 | Processing Time: 782ms
2025-10-29 05:00:02,626 - logging_config - INFO - REQUEST - ID: 1fa8cd83-60a0-4174-862e-0e5d51078110 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:02,833 - logging_config - INFO - RESPONSE - ID: 055c0168-3060-4f52-8c2d-c8ea58f89647 | Status: 200 | Processing Time: 613ms
2025-10-29 05:00:02,840 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:00:03,807 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:00:03,853 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:00:04,045 - logging_config - INFO - RESPONSE - ID: 1fa8cd83-60a0-4174-862e-0e5d51078110 | Status: 200 | Processing Time: 1424ms
2025-10-29 05:00:04,233 - logging_config - INFO - REQUEST - ID: 5492a7f3-b802-41dc-be53-fed77324d67c | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:04,434 - logging_config - INFO - REQUEST - ID: e19bfbb0-8bf2-4e9e-b115-926bbbd5d4c7 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:04,640 - logging_config - INFO - RESPONSE - ID: 5492a7f3-b802-41dc-be53-fed77324d67c | Status: 200 | Processing Time: 397ms
2025-10-29 05:00:04,650 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:00:05,583 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:00:05,634 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:00:05,829 - logging_config - INFO - RESPONSE - ID: e19bfbb0-8bf2-4e9e-b115-926bbbd5d4c7 | Status: 200 | Processing Time: 1391ms
2025-10-29 05:00:08,984 - logging_config - INFO - REQUEST - ID: eb26a6a7-c0b0-4699-a70c-7d30d7956fd8 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:09,172 - logging_config - INFO - RESPONSE - ID: eb26a6a7-c0b0-4699-a70c-7d30d7956fd8 | Status: 200 | Processing Time: 192ms
2025-10-29 05:00:09,360 - logging_config - INFO - REQUEST - ID: d8e2fdce-1295-45f6-bad9-aab1b3acc41f | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 54 bytes
2025-10-29 05:00:09,366 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production data...
2025-10-29 05:00:09,366 - logging_config - ERROR - SQL Generation Error - User: fdwarren@gmail.com | Error: RedFiveCore.generate_sql() missing 1 required positional argument: 'history'
Traceback (most recent call last):
  File "/Users/fredwarren/Projects/redfive/src/main.py", line 229, in generate_sql_endpoint
    response = core.generate_sql(request.query)
TypeError: RedFiveCore.generate_sql() missing 1 required positional argument: 'history'
2025-10-29 05:00:09,562 - logging_config - INFO - RESPONSE - ID: d8e2fdce-1295-45f6-bad9-aab1b3acc41f | Status: 500 | Processing Time: 194ms
2025-10-29 05:00:55,367 - logging_config - INFO - REQUEST - ID: 959d0285-5bf8-44f5-9754-fe6be87fc5f5 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:55,562 - logging_config - INFO - RESPONSE - ID: 959d0285-5bf8-44f5-9754-fe6be87fc5f5 | Status: 200 | Processing Time: 983ms
2025-10-29 05:00:57,517 - logging_config - INFO - REQUEST - ID: acc47949-38e3-4a52-aa40-011583c5fb5e | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:00:57,859 - logging_config - INFO - RESPONSE - ID: acc47949-38e3-4a52-aa40-011583c5fb5e | Status: 200 | Processing Time: 338ms
2025-10-29 05:00:59,483 - logging_config - INFO - REQUEST - ID: d90b9ea9-b8d4-4bda-8aa4-69dcfc3f3a1c | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:59,671 - logging_config - INFO - REQUEST - ID: 4eb44083-5855-4763-af10-d72bccec9e0c | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:00:59,859 - logging_config - INFO - REQUEST - ID: 45e40724-080b-4a88-a440-e23654caea15 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:00,051 - logging_config - INFO - REQUEST - ID: bb73c17d-6bc6-457d-a028-58d87f4789fe | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:00,245 - logging_config - INFO - RESPONSE - ID: d90b9ea9-b8d4-4bda-8aa4-69dcfc3f3a1c | Status: 200 | Processing Time: 754ms
2025-10-29 05:01:00,445 - logging_config - INFO - RESPONSE - ID: 4eb44083-5855-4763-af10-d72bccec9e0c | Status: 200 | Processing Time: 765ms
2025-10-29 05:01:00,648 - logging_config - INFO - RESPONSE - ID: 45e40724-080b-4a88-a440-e23654caea15 | Status: 200 | Processing Time: 780ms
2025-10-29 05:01:00,835 - logging_config - INFO - RESPONSE - ID: bb73c17d-6bc6-457d-a028-58d87f4789fe | Status: 200 | Processing Time: 788ms
2025-10-29 05:01:01,026 - logging_config - INFO - REQUEST - ID: 4218dfd8-dcaa-42b9-9360-c19224f1bacd | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:01,219 - logging_config - INFO - REQUEST - ID: 529ce879-4b64-4751-a581-3c359c546a5e | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:01,256 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:01:02,227 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:01:02,275 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:01:02,474 - logging_config - INFO - RESPONSE - ID: 4218dfd8-dcaa-42b9-9360-c19224f1bacd | Status: 200 | Processing Time: 1445ms
2025-10-29 05:01:02,662 - logging_config - INFO - RESPONSE - ID: 529ce879-4b64-4751-a581-3c359c546a5e | Status: 200 | Processing Time: 1446ms
2025-10-29 05:01:02,860 - logging_config - INFO - REQUEST - ID: 9d7c4ae6-58e9-48e9-b08f-a8125fcdeafa | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:03,056 - logging_config - INFO - REQUEST - ID: e5d0a7e4-e0cb-44a0-b732-c20af7897b50 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:03,065 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:01:03,978 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:01:04,043 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:01:04,234 - logging_config - INFO - RESPONSE - ID: 9d7c4ae6-58e9-48e9-b08f-a8125fcdeafa | Status: 200 | Processing Time: 1372ms
2025-10-29 05:01:04,421 - logging_config - INFO - RESPONSE - ID: e5d0a7e4-e0cb-44a0-b732-c20af7897b50 | Status: 200 | Processing Time: 1369ms
2025-10-29 05:01:06,568 - logging_config - INFO - REQUEST - ID: e26ae304-8eeb-486a-9d23-9461437edddb | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:01:06,754 - logging_config - INFO - RESPONSE - ID: e26ae304-8eeb-486a-9d23-9461437edddb | Status: 200 | Processing Time: 185ms
2025-10-29 05:01:06,954 - logging_config - INFO - REQUEST - ID: 17c9cd20-4358-4acb-a365-31d0c6ed147d | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 54 bytes
2025-10-29 05:01:06,955 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production data...
2025-10-29 05:01:06,956 - logging_config - ERROR - SQL Generation Error - User: fdwarren@gmail.com | Error: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/Users/fredwarren/Projects/redfive/src/main.py", line 229, in generate_sql_endpoint
    response = core.generate_sql(request.query)
  File "/Users/fredwarren/Projects/redfive/src/core.py", line 178, in generate_sql
    history_str = "\n".join([f"{item.user_prompt}\n" for item in history])
                                                                 ^^^^^^^
TypeError: 'NoneType' object is not iterable
2025-10-29 05:01:07,144 - logging_config - INFO - RESPONSE - ID: 17c9cd20-4358-4acb-a365-31d0c6ed147d | Status: 500 | Processing Time: 200ms
2025-10-29 05:02:15,152 - logging_config - INFO - REQUEST - ID: 5ba5bcd3-e674-4e47-b10d-0a5416c7ed34 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:15,344 - logging_config - INFO - RESPONSE - ID: 5ba5bcd3-e674-4e47-b10d-0a5416c7ed34 | Status: 200 | Processing Time: 958ms
2025-10-29 05:02:19,914 - logging_config - INFO - REQUEST - ID: 66c80183-88b3-4cf8-9b17-9eac4e20e799 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:02:20,255 - logging_config - INFO - RESPONSE - ID: 66c80183-88b3-4cf8-9b17-9eac4e20e799 | Status: 200 | Processing Time: 330ms
2025-10-29 05:02:21,855 - logging_config - INFO - REQUEST - ID: 8be984a1-dcf8-4c72-9014-7adb39e08373 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:22,099 - logging_config - INFO - REQUEST - ID: 14a80d0b-f92b-4ec7-8255-3dcdea1b8581 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:22,290 - logging_config - INFO - REQUEST - ID: 8245b7a6-ee45-46e0-846e-9ee53c792747 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:22,482 - logging_config - INFO - REQUEST - ID: 0e976545-9655-4e1b-9ab3-77690a08c3dc | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:22,673 - logging_config - INFO - RESPONSE - ID: 8be984a1-dcf8-4c72-9014-7adb39e08373 | Status: 200 | Processing Time: 810ms
2025-10-29 05:02:22,861 - logging_config - INFO - RESPONSE - ID: 14a80d0b-f92b-4ec7-8255-3dcdea1b8581 | Status: 200 | Processing Time: 822ms
2025-10-29 05:02:23,049 - logging_config - INFO - RESPONSE - ID: 8245b7a6-ee45-46e0-846e-9ee53c792747 | Status: 200 | Processing Time: 762ms
2025-10-29 05:02:23,239 - logging_config - INFO - RESPONSE - ID: 0e976545-9655-4e1b-9ab3-77690a08c3dc | Status: 200 | Processing Time: 761ms
2025-10-29 05:02:23,438 - logging_config - INFO - REQUEST - ID: 1c29996c-5fae-4598-870f-978c6e674b8a | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:23,632 - logging_config - INFO - REQUEST - ID: 7a0d117a-9309-4fd2-b7b2-f17c10d371ba | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:23,655 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:02:24,580 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:02:24,627 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:02:24,819 - logging_config - INFO - RESPONSE - ID: 1c29996c-5fae-4598-870f-978c6e674b8a | Status: 200 | Processing Time: 1387ms
2025-10-29 05:02:25,012 - logging_config - INFO - RESPONSE - ID: 7a0d117a-9309-4fd2-b7b2-f17c10d371ba | Status: 200 | Processing Time: 1384ms
2025-10-29 05:02:25,210 - logging_config - INFO - REQUEST - ID: fd6be2c8-0c1a-4c02-bc9f-b9e5f16f63d1 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:25,400 - logging_config - INFO - REQUEST - ID: 80edd545-2466-44e7-a007-cb0cc874203f | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:25,406 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:02:26,326 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:02:26,373 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:02:26,563 - logging_config - INFO - RESPONSE - ID: fd6be2c8-0c1a-4c02-bc9f-b9e5f16f63d1 | Status: 200 | Processing Time: 1354ms
2025-10-29 05:02:26,750 - logging_config - INFO - RESPONSE - ID: 80edd545-2466-44e7-a007-cb0cc874203f | Status: 200 | Processing Time: 1350ms
2025-10-29 05:02:33,119 - logging_config - INFO - REQUEST - ID: c4520a8f-a1bb-4fc9-aae1-b30f674c257b | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:33,308 - logging_config - INFO - RESPONSE - ID: c4520a8f-a1bb-4fc9-aae1-b30f674c257b | Status: 200 | Processing Time: 186ms
2025-10-29 05:02:33,504 - logging_config - INFO - REQUEST - ID: 893c9762-8a33-4530-a65e-377a557bbc47 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 57 bytes
2025-10-29 05:02:33,515 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production volumes...
2025-10-29 05:02:34,350 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:02:37,465 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:02:37,476 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:02:37,661 - logging_config - INFO - RESPONSE - ID: 893c9762-8a33-4530-a65e-377a557bbc47 | Status: 200 | Processing Time: 4162ms
2025-10-29 05:02:43,217 - logging_config - INFO - REQUEST - ID: ee6774c1-7a6b-4518-accb-acd0ea0a8f0e | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:02:43,409 - logging_config - INFO - RESPONSE - ID: ee6774c1-7a6b-4518-accb-acd0ea0a8f0e | Status: 200 | Processing Time: 189ms
2025-10-29 05:02:43,607 - logging_config - INFO - REQUEST - ID: 205e2b02-66ce-45c0-8704-ea4bb47f03b3 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 338 bytes
2025-10-29 05:02:43,609 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: by county...
2025-10-29 05:02:43,916 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:02:47,088 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:02:47,090 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:02:47,281 - logging_config - INFO - RESPONSE - ID: 205e2b02-66ce-45c0-8704-ea4bb47f03b3 | Status: 200 | Processing Time: 3675ms
2025-10-29 05:07:32,012 - logging_config - INFO - REQUEST - ID: 3613d276-55df-4d09-b145-a85ede7c25a0 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:32,215 - logging_config - INFO - RESPONSE - ID: 3613d276-55df-4d09-b145-a85ede7c25a0 | Status: 200 | Processing Time: 975ms
2025-10-29 05:07:34,567 - logging_config - INFO - REQUEST - ID: 7f4c40ad-4db7-49db-aabb-0db80cfe9ec3 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:07:34,913 - logging_config - INFO - RESPONSE - ID: 7f4c40ad-4db7-49db-aabb-0db80cfe9ec3 | Status: 200 | Processing Time: 350ms
2025-10-29 05:07:36,539 - logging_config - INFO - REQUEST - ID: a9d53fd6-c20f-43b9-80e1-9be999efc60c | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:36,729 - logging_config - INFO - REQUEST - ID: 212cb15e-5b28-4bae-9c8e-277b4b8eadf4 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:36,915 - logging_config - INFO - REQUEST - ID: aa03a03a-4cf8-4f54-a599-3213531647c4 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:37,106 - logging_config - INFO - RESPONSE - ID: a9d53fd6-c20f-43b9-80e1-9be999efc60c | Status: 200 | Processing Time: 566ms
2025-10-29 05:07:37,309 - logging_config - INFO - REQUEST - ID: fbb9b543-db4b-4f06-b892-6f91a00ee738 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:37,507 - logging_config - INFO - RESPONSE - ID: 212cb15e-5b28-4bae-9c8e-277b4b8eadf4 | Status: 200 | Processing Time: 769ms
2025-10-29 05:07:37,694 - logging_config - INFO - RESPONSE - ID: aa03a03a-4cf8-4f54-a599-3213531647c4 | Status: 200 | Processing Time: 779ms
2025-10-29 05:07:37,897 - logging_config - INFO - REQUEST - ID: 76a9051b-4b9e-4ed5-a173-c05187722d1a | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:38,095 - logging_config - INFO - RESPONSE - ID: fbb9b543-db4b-4f06-b892-6f91a00ee738 | Status: 200 | Processing Time: 785ms
2025-10-29 05:07:38,289 - logging_config - INFO - REQUEST - ID: 371d2b28-a25e-4931-97ce-0167476c247e | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:38,514 - logging_config - INFO - RESPONSE - ID: 76a9051b-4b9e-4ed5-a173-c05187722d1a | Status: 200 | Processing Time: 623ms
2025-10-29 05:07:38,521 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:07:39,434 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:07:39,480 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:07:39,669 - logging_config - INFO - RESPONSE - ID: 371d2b28-a25e-4931-97ce-0167476c247e | Status: 200 | Processing Time: 1386ms
2025-10-29 05:07:39,863 - logging_config - INFO - REQUEST - ID: 1be1bbc6-6e5a-4089-8ed0-218640d54b06 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:40,059 - logging_config - INFO - REQUEST - ID: cb40e184-eb11-424d-a43d-e572a8cc4b09 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:40,254 - logging_config - INFO - RESPONSE - ID: 1be1bbc6-6e5a-4089-8ed0-218640d54b06 | Status: 200 | Processing Time: 393ms
2025-10-29 05:07:40,259 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:07:41,185 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:07:41,232 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:07:41,422 - logging_config - INFO - RESPONSE - ID: cb40e184-eb11-424d-a43d-e572a8cc4b09 | Status: 200 | Processing Time: 1368ms
2025-10-29 05:07:42,952 - logging_config - INFO - REQUEST - ID: af202c07-d06b-480e-a1a5-8a2422b6df7d | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:43,151 - logging_config - INFO - RESPONSE - ID: af202c07-d06b-480e-a1a5-8a2422b6df7d | Status: 200 | Processing Time: 195ms
2025-10-29 05:07:43,345 - logging_config - INFO - REQUEST - ID: 86f8308f-2d6b-4b7c-a926-25f0f7df186b | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 49 bytes
2025-10-29 05:07:43,348 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production...
2025-10-29 05:07:44,347 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:07:45,329 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        

        Generate a single SQL query answering:
        'show production'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:07:47,281 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:07:47,292 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:07:47,478 - logging_config - INFO - RESPONSE - ID: 86f8308f-2d6b-4b7c-a926-25f0f7df186b | Status: 200 | Processing Time: 4138ms
2025-10-29 05:07:54,511 - logging_config - INFO - REQUEST - ID: 4048546d-cb5f-460f-8746-09c8aa17b596 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:07:54,720 - logging_config - INFO - RESPONSE - ID: 4048546d-cb5f-460f-8746-09c8aa17b596 | Status: 200 | Processing Time: 191ms
2025-10-29 05:07:54,917 - logging_config - INFO - REQUEST - ID: 907d13d0-5479-466a-83c4-0926486701bc | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 345 bytes
2025-10-29 05:07:54,923 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: by county...
2025-10-29 05:07:55,317 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:07:56,316 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        

        Generate a single SQL query answering:
        'by county'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:07:57,879 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:07:57,882 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:07:58,071 - logging_config - INFO - RESPONSE - ID: 907d13d0-5479-466a-83c4-0926486701bc | Status: 200 | Processing Time: 3154ms
2025-10-29 05:10:01,770 - logging_config - INFO - REQUEST - ID: 7edf7cf9-f869-4804-8208-84918fa55e53 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:01,963 - logging_config - INFO - RESPONSE - ID: 7edf7cf9-f869-4804-8208-84918fa55e53 | Status: 200 | Processing Time: 965ms
2025-10-29 05:10:04,508 - logging_config - INFO - REQUEST - ID: cadbc1ea-dee7-44f5-bfcc-1b763a7d4448 | User: None | Method: OPTIONS | Path: /auth/google | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:04,695 - logging_config - INFO - RESPONSE - ID: cadbc1ea-dee7-44f5-bfcc-1b763a7d4448 | Status: 200 | Processing Time: 181ms
2025-10-29 05:10:04,892 - logging_config - INFO - REQUEST - ID: 82923c01-456e-4827-a96d-20cc9d1761b0 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:10:05,249 - logging_config - INFO - RESPONSE - ID: 82923c01-456e-4827-a96d-20cc9d1761b0 | Status: 200 | Processing Time: 361ms
2025-10-29 05:10:06,864 - logging_config - INFO - REQUEST - ID: 126f4948-ded1-4b51-a9c0-f59da4ed2ca7 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:07,048 - logging_config - INFO - RESPONSE - ID: 126f4948-ded1-4b51-a9c0-f59da4ed2ca7 | Status: 200 | Processing Time: 185ms
2025-10-29 05:10:07,239 - logging_config - INFO - REQUEST - ID: bdf03ef0-e5e3-4c90-8cab-c817f0982956 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:07,424 - logging_config - INFO - REQUEST - ID: f69af80e-7ff4-4d47-9367-a4d32827e1eb | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:07,608 - logging_config - INFO - REQUEST - ID: ce165720-cb8f-491f-820c-3ddcfe873635 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:07,800 - logging_config - INFO - REQUEST - ID: 30c171d4-d2f2-4c02-82f5-e3dfe9ee6be2 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:07,993 - logging_config - INFO - RESPONSE - ID: bdf03ef0-e5e3-4c90-8cab-c817f0982956 | Status: 200 | Processing Time: 748ms
2025-10-29 05:10:08,175 - logging_config - INFO - RESPONSE - ID: f69af80e-7ff4-4d47-9367-a4d32827e1eb | Status: 200 | Processing Time: 754ms
2025-10-29 05:10:08,363 - logging_config - INFO - RESPONSE - ID: ce165720-cb8f-491f-820c-3ddcfe873635 | Status: 200 | Processing Time: 750ms
2025-10-29 05:10:08,552 - logging_config - INFO - REQUEST - ID: 1d66fc45-5026-4f5b-9c94-1fdb6104b2d0 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:08,752 - logging_config - INFO - RESPONSE - ID: 30c171d4-d2f2-4c02-82f5-e3dfe9ee6be2 | Status: 200 | Processing Time: 958ms
2025-10-29 05:10:08,754 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:10:09,686 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:10:09,732 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:10:09,926 - logging_config - INFO - RESPONSE - ID: 1d66fc45-5026-4f5b-9c94-1fdb6104b2d0 | Status: 200 | Processing Time: 1370ms
2025-10-29 05:10:10,125 - logging_config - INFO - REQUEST - ID: 6422e7b1-acb1-4796-bf9b-357a803e4d69 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:10,312 - logging_config - INFO - REQUEST - ID: 9b5d596d-7b92-49d9-84aa-a642919b119f | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:10,506 - logging_config - INFO - RESPONSE - ID: 6422e7b1-acb1-4796-bf9b-357a803e4d69 | Status: 200 | Processing Time: 388ms
2025-10-29 05:10:10,507 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:10:11,413 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:10:11,459 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:10:11,647 - logging_config - INFO - RESPONSE - ID: 9b5d596d-7b92-49d9-84aa-a642919b119f | Status: 200 | Processing Time: 1334ms
2025-10-29 05:10:15,508 - logging_config - INFO - REQUEST - ID: 5e823f90-7da4-4272-822d-282fce9954a2 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:15,703 - logging_config - INFO - RESPONSE - ID: 5e823f90-7da4-4272-822d-282fce9954a2 | Status: 200 | Processing Time: 192ms
2025-10-29 05:10:15,903 - logging_config - INFO - REQUEST - ID: 4ebbf1af-c6bf-4c66-892c-4f0f80108ba1 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 49 bytes
2025-10-29 05:10:15,908 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production...
2025-10-29 05:10:15,909 - core - INFO - History==============: []
2025-10-29 05:10:16,426 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:10:17,450 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        

        Generate a single SQL query answering:
        'show production'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:10:18,461 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:10:18,478 - core - INFO - Response: { "sql": "SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;" }
2025-10-29 05:10:18,478 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:10:18,692 - logging_config - INFO - RESPONSE - ID: 4ebbf1af-c6bf-4c66-892c-4f0f80108ba1 | Status: 200 | Processing Time: 2767ms
2025-10-29 05:10:22,007 - logging_config - INFO - REQUEST - ID: f7588a70-2544-4565-afff-0e7dc53fc598 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:10:22,194 - logging_config - INFO - RESPONSE - ID: f7588a70-2544-4565-afff-0e7dc53fc598 | Status: 200 | Processing Time: 195ms
2025-10-29 05:10:22,394 - logging_config - INFO - REQUEST - ID: f75f5273-c5d2-4d1d-8fea-51f46658d747 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 235 bytes
2025-10-29 05:10:22,396 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: by county...
2025-10-29 05:10:22,396 - core - INFO - History==============: []
2025-10-29 05:10:22,771 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:10:23,729 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        

        Generate a single SQL query answering:
        'by county'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:10:25,290 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:10:25,298 - core - INFO - Response: { "sql": "SELECT c.county_name, SUM(d.downtime_hours) AS total_downtime_hours\nFROM upstream.og_daily_downtime d\nJOIN upstream.og_well w ON d.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name\nORDER BY c.county_name;" }
2025-10-29 05:10:25,298 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:10:25,487 - logging_config - INFO - RESPONSE - ID: f75f5273-c5d2-4d1d-8fea-51f46658d747 | Status: 200 | Processing Time: 3092ms
2025-10-29 05:14:56,624 - logging_config - INFO - REQUEST - ID: cb9eb5e8-e013-4b6a-abb1-02deb1b5c1de | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:56,819 - logging_config - INFO - REQUEST - ID: 83d0826e-3b0e-4dee-acfe-b82079862d7c | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:57,004 - logging_config - INFO - REQUEST - ID: 90c2ed66-fc2d-4300-a24f-1b2d67817264 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:57,196 - logging_config - INFO - RESPONSE - ID: cb9eb5e8-e013-4b6a-abb1-02deb1b5c1de | Status: 200 | Processing Time: 2425ms
2025-10-29 05:14:57,390 - logging_config - INFO - RESPONSE - ID: 83d0826e-3b0e-4dee-acfe-b82079862d7c | Status: 200 | Processing Time: 572ms
2025-10-29 05:14:57,582 - logging_config - INFO - RESPONSE - ID: 90c2ed66-fc2d-4300-a24f-1b2d67817264 | Status: 200 | Processing Time: 574ms
2025-10-29 05:14:57,771 - logging_config - INFO - REQUEST - ID: b9fd6435-bb6c-44f4-9231-fde1d1c76998 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:57,965 - logging_config - INFO - REQUEST - ID: 2b92cfe5-ad7c-4fd9-8d18-5a0b1c3ec5fc | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:58,152 - logging_config - INFO - RESPONSE - ID: b9fd6435-bb6c-44f4-9231-fde1d1c76998 | Status: 200 | Processing Time: 382ms
2025-10-29 05:14:58,351 - logging_config - INFO - RESPONSE - ID: 2b92cfe5-ad7c-4fd9-8d18-5a0b1c3ec5fc | Status: 200 | Processing Time: 387ms
2025-10-29 05:14:58,539 - logging_config - INFO - REQUEST - ID: 9ac8c19d-900f-4df7-a08c-644ae960c2bf | User: None | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:58,730 - logging_config - INFO - REQUEST - ID: 5cbd9926-aaa4-47f9-ab21-6a2d755ab51e | User: None | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:58,920 - logging_config - INFO - RESPONSE - ID: 9ac8c19d-900f-4df7-a08c-644ae960c2bf | Status: 401 | Processing Time: 379ms
2025-10-29 05:14:59,114 - logging_config - INFO - RESPONSE - ID: 5cbd9926-aaa4-47f9-ab21-6a2d755ab51e | Status: 401 | Processing Time: 387ms
2025-10-29 05:14:59,302 - logging_config - INFO - REQUEST - ID: 7f210898-8159-4db5-9d53-7535c50a2d98 | User: None | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:59,485 - logging_config - INFO - REQUEST - ID: ff0704e7-e04e-46cb-ba1c-325b13036dab | User: None | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:14:59,672 - logging_config - INFO - RESPONSE - ID: 7f210898-8159-4db5-9d53-7535c50a2d98 | Status: 401 | Processing Time: 369ms
2025-10-29 05:14:59,859 - logging_config - INFO - RESPONSE - ID: ff0704e7-e04e-46cb-ba1c-325b13036dab | Status: 401 | Processing Time: 369ms
2025-10-29 05:15:12,210 - logging_config - INFO - REQUEST - ID: 1749d256-1033-4d7b-88e4-60c36cddcf29 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:15:12,566 - logging_config - INFO - RESPONSE - ID: 1749d256-1033-4d7b-88e4-60c36cddcf29 | Status: 200 | Processing Time: 1105ms
2025-10-29 05:15:14,176 - logging_config - INFO - REQUEST - ID: a160df0b-ddbe-4000-b55d-4dba2533c607 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:14,363 - logging_config - INFO - REQUEST - ID: 46280c40-5834-4037-b916-a4d11fdf238f | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:14,552 - logging_config - INFO - REQUEST - ID: ba05143f-1601-4689-8c21-199c5f68eb9a | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:14,740 - logging_config - INFO - REQUEST - ID: df9ddb46-6b60-4618-981a-3d7655e715f5 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:14,929 - logging_config - INFO - RESPONSE - ID: a160df0b-ddbe-4000-b55d-4dba2533c607 | Status: 200 | Processing Time: 751ms
2025-10-29 05:15:15,125 - logging_config - INFO - RESPONSE - ID: 46280c40-5834-4037-b916-a4d11fdf238f | Status: 200 | Processing Time: 753ms
2025-10-29 05:15:15,321 - logging_config - INFO - RESPONSE - ID: ba05143f-1601-4689-8c21-199c5f68eb9a | Status: 200 | Processing Time: 763ms
2025-10-29 05:15:15,527 - logging_config - INFO - RESPONSE - ID: df9ddb46-6b60-4618-981a-3d7655e715f5 | Status: 200 | Processing Time: 769ms
2025-10-29 05:15:15,728 - logging_config - INFO - REQUEST - ID: ba41dfc2-1489-4869-bcc3-ab51310ff41a | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:15,933 - logging_config - INFO - REQUEST - ID: c2cef754-c456-4422-86b7-762a217152b2 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:15,969 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:15:16,924 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:15:16,972 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:15:17,168 - logging_config - INFO - RESPONSE - ID: ba41dfc2-1489-4869-bcc3-ab51310ff41a | Status: 200 | Processing Time: 1440ms
2025-10-29 05:15:17,362 - logging_config - INFO - RESPONSE - ID: c2cef754-c456-4422-86b7-762a217152b2 | Status: 200 | Processing Time: 1441ms
2025-10-29 05:15:17,556 - logging_config - INFO - REQUEST - ID: 027b1962-264d-4b91-8d9e-07cbd88caebd | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:17,753 - logging_config - INFO - REQUEST - ID: 2622a622-47ce-4032-bb96-b626a1d35370 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:17,758 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:15:18,717 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:15:18,766 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:15:18,962 - logging_config - INFO - RESPONSE - ID: 027b1962-264d-4b91-8d9e-07cbd88caebd | Status: 200 | Processing Time: 1400ms
2025-10-29 05:15:19,173 - logging_config - INFO - RESPONSE - ID: 2622a622-47ce-4032-bb96-b626a1d35370 | Status: 200 | Processing Time: 1398ms
2025-10-29 05:15:26,857 - logging_config - INFO - REQUEST - ID: 036b26af-a325-4525-90c8-e59ea2ffbe86 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:15:27,048 - logging_config - INFO - RESPONSE - ID: 036b26af-a325-4525-90c8-e59ea2ffbe86 | Status: 200 | Processing Time: 188ms
2025-10-29 05:15:27,248 - logging_config - INFO - REQUEST - ID: 8983f34d-863a-4204-bea9-cd98aa056909 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 57 bytes
2025-10-29 05:15:27,259 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production volumes...
2025-10-29 05:15:27,260 - logging_config - INFO - Request: query='show production volumes'
2025-10-29 05:15:27,260 - logging_config - ERROR - SQL Generation Error - User: fdwarren@gmail.com | Error: 'SqlGenerationRequest' object has no attribute 'history'
Traceback (most recent call last):
  File "/Users/fredwarren/Projects/redfive/src/main.py", line 229, in generate_sql_endpoint
    response = core.generate_sql(request.query, request.history)
                                                ^^^^^^^^^^^^^^^
  File "/Users/fredwarren/Projects/redfive/.venv/lib/python3.13/site-packages/pydantic/main.py", line 1026, in __getattr__
    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')
AttributeError: 'SqlGenerationRequest' object has no attribute 'history'
2025-10-29 05:15:27,453 - logging_config - INFO - RESPONSE - ID: 8983f34d-863a-4204-bea9-cd98aa056909 | Status: 500 | Processing Time: 204ms
2025-10-29 05:17:13,072 - logging_config - INFO - REQUEST - ID: bf24acf8-ce3f-4a9e-a1cb-d74f0881a1d9 | User: None | Method: POST | Path: /auth/logout | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:13,269 - logging_config - INFO - RESPONSE - ID: bf24acf8-ce3f-4a9e-a1cb-d74f0881a1d9 | Status: 200 | Processing Time: 968ms
2025-10-29 05:17:15,391 - logging_config - INFO - REQUEST - ID: 3336f069-e0b8-4d31-9223-486c6f057cd8 | User: None | Method: POST | Path: /auth/google | Query: {} | Body Size: 1203 bytes
2025-10-29 05:17:15,729 - logging_config - INFO - RESPONSE - ID: 3336f069-e0b8-4d31-9223-486c6f057cd8 | Status: 200 | Processing Time: 339ms
2025-10-29 05:17:17,344 - logging_config - INFO - REQUEST - ID: 13fb8cd2-af60-4517-8a12-76c24d33e7a5 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:17,531 - logging_config - INFO - REQUEST - ID: 6ee04a47-73af-45eb-aacf-97c1dc73a30d | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:17,721 - logging_config - INFO - REQUEST - ID: 7e8e4fda-ca1a-48d1-90be-5a3bb89e6af3 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:17,920 - logging_config - INFO - REQUEST - ID: 2ae960c8-6772-4b74-8206-8bb43b85d203 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:18,108 - logging_config - INFO - RESPONSE - ID: 13fb8cd2-af60-4517-8a12-76c24d33e7a5 | Status: 200 | Processing Time: 762ms
2025-10-29 05:17:18,303 - logging_config - INFO - RESPONSE - ID: 6ee04a47-73af-45eb-aacf-97c1dc73a30d | Status: 200 | Processing Time: 770ms
2025-10-29 05:17:18,495 - logging_config - INFO - RESPONSE - ID: 7e8e4fda-ca1a-48d1-90be-5a3bb89e6af3 | Status: 200 | Processing Time: 772ms
2025-10-29 05:17:18,701 - logging_config - INFO - RESPONSE - ID: 2ae960c8-6772-4b74-8206-8bb43b85d203 | Status: 200 | Processing Time: 779ms
2025-10-29 05:17:18,900 - logging_config - INFO - REQUEST - ID: 3e493639-1c4c-4492-ab01-e402a6f3e88d | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:19,091 - logging_config - INFO - REQUEST - ID: 7e8e1b2a-325b-4b87-a6d7-65c980ff5d2d | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:19,119 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:17:20,039 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:17:20,086 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:17:20,281 - logging_config - INFO - RESPONSE - ID: 3e493639-1c4c-4492-ab01-e402a6f3e88d | Status: 200 | Processing Time: 1382ms
2025-10-29 05:17:20,472 - logging_config - INFO - RESPONSE - ID: 7e8e1b2a-325b-4b87-a6d7-65c980ff5d2d | Status: 200 | Processing Time: 1382ms
2025-10-29 05:17:20,663 - logging_config - INFO - REQUEST - ID: 6158bf58-a3c7-4963-b197-0049a20dc223 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:20,853 - logging_config - INFO - REQUEST - ID: 6e6a9f0b-32ef-430b-90bd-d5d9c2692eb3 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:20,860 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 05:17:21,772 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 05:17:21,822 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 05:17:22,014 - logging_config - INFO - RESPONSE - ID: 6158bf58-a3c7-4963-b197-0049a20dc223 | Status: 200 | Processing Time: 1347ms
2025-10-29 05:17:22,207 - logging_config - INFO - RESPONSE - ID: 6e6a9f0b-32ef-430b-90bd-d5d9c2692eb3 | Status: 200 | Processing Time: 1356ms
2025-10-29 05:17:27,000 - logging_config - INFO - REQUEST - ID: 7819dbb5-ba4e-42ca-b6fa-45a792a71f2e | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:27,186 - logging_config - INFO - RESPONSE - ID: 7819dbb5-ba4e-42ca-b6fa-45a792a71f2e | Status: 200 | Processing Time: 184ms
2025-10-29 05:17:27,380 - logging_config - INFO - REQUEST - ID: a3d990b2-02fb-4826-9060-9f0ca207e28e | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 54 bytes
2025-10-29 05:17:27,383 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: show production data...
2025-10-29 05:17:27,383 - logging_config - INFO - Request: query='show production data' history=[]
2025-10-29 05:17:27,383 - core - INFO - History==============: []
2025-10-29 05:17:28,547 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:17:29,537 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        

        Generate a single SQL query answering:
        'show production data'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:17:31,042 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:17:31,055 - core - INFO - Response: { "sql": "SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;" }
2025-10-29 05:17:31,055 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:17:31,247 - logging_config - INFO - RESPONSE - ID: a3d990b2-02fb-4826-9060-9f0ca207e28e | Status: 200 | Processing Time: 3862ms
2025-10-29 05:17:39,285 - logging_config - INFO - REQUEST - ID: 4f122b0f-f68e-4b98-82f5-34b0676c2ef2 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:39,470 - logging_config - INFO - RESPONSE - ID: 4f122b0f-f68e-4b98-82f5-34b0676c2ef2 | Status: 200 | Processing Time: 184ms
2025-10-29 05:17:39,663 - logging_config - INFO - REQUEST - ID: ea979a17-e43d-4dd2-93bb-f946c7cd8849 | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 240 bytes
2025-10-29 05:17:39,666 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: by county...
2025-10-29 05:17:39,666 - logging_config - INFO - Request: query='by county' history=[HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;')]
2025-10-29 05:17:39,667 - core - INFO - History==============: [HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;')]
2025-10-29 05:17:39,857 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:17:40,874 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        User: show production data
System: SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;

        Generate a single SQL query answering:
        'by county'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:17:42,923 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:17:42,927 - core - INFO - Response: { "sql": "SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;" }
2025-10-29 05:17:42,927 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:17:43,118 - logging_config - INFO - RESPONSE - ID: ea979a17-e43d-4dd2-93bb-f946c7cd8849 | Status: 200 | Processing Time: 3450ms
2025-10-29 05:17:50,194 - logging_config - INFO - REQUEST - ID: d8d79af0-da31-4bf6-ab49-ec0fbd49dc12 | User: None | Method: OPTIONS | Path: /execute-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:50,388 - logging_config - INFO - RESPONSE - ID: d8d79af0-da31-4bf6-ab49-ec0fbd49dc12 | Status: 200 | Processing Time: 190ms
2025-10-29 05:17:50,584 - logging_config - INFO - REQUEST - ID: b25b3f68-efdc-4cbb-bf99-e9d3953df5a0 | User: fdwarren@gmail.com | Method: POST | Path: /execute-sql | Query: {} | Body Size: 537 bytes
2025-10-29 05:17:50,590 - logging_config - INFO - SQL Execution Request - User: fdwarren@gmail.com | SQL: SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_pr...
2025-10-29 05:17:51,684 - logging_config - INFO - SQL Execution Success - User: fdwarren@gmail.com | Rows: 1025
2025-10-29 05:17:51,872 - logging_config - INFO - RESPONSE - ID: b25b3f68-efdc-4cbb-bf99-e9d3953df5a0 | Status: 200 | Processing Time: 1293ms
2025-10-29 05:17:57,328 - logging_config - INFO - REQUEST - ID: c62efbfc-4d69-45d9-8c96-c7b4fff7ffe9 | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:17:57,518 - logging_config - INFO - RESPONSE - ID: c62efbfc-4d69-45d9-8c96-c7b4fff7ffe9 | Status: 200 | Processing Time: 185ms
2025-10-29 05:17:57,711 - logging_config - INFO - REQUEST - ID: deee289e-9c9f-47c1-a9ce-341e303c0beb | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 709 bytes
2025-10-29 05:17:57,718 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: round the units...
2025-10-29 05:17:57,718 - logging_config - INFO - Request: query='round the units' history=[HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;'), HistoryItem(user_prompt='by county', system_response='SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;')]
2025-10-29 05:17:57,719 - core - INFO - History==============: [HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;'), HistoryItem(user_prompt='by county', system_response='SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;')]
2025-10-29 05:17:58,693 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:17:59,688 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        User: show production data
System: SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;
User: by county
System: SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl
FROM upstream.og_daily_production dp
JOIN upstream.og_well w ON dp.well_guid = w.well_guid
JOIN upstream.og_county c ON w.county_code = c.county_code
GROUP BY c.county_name, dp.prod_date
ORDER BY c.county_name, dp.prod_date;

        Generate a single SQL query answering:
        'round the units'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:18:04,123 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:18:04,126 - core - INFO - Response: { "sql": "SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gross_gas_mcf)) AS total_gas_mcf, ROUND(SUM(dp.gross_water_bbl)) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;" }
2025-10-29 05:18:04,126 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:18:04,314 - logging_config - INFO - RESPONSE - ID: deee289e-9c9f-47c1-a9ce-341e303c0beb | Status: 200 | Processing Time: 6604ms
2025-10-29 05:18:06,373 - logging_config - INFO - REQUEST - ID: 95da5296-d14c-4ab7-8e7a-b091875a7ed4 | User: None | Method: OPTIONS | Path: /execute-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:18:06,560 - logging_config - INFO - RESPONSE - ID: 95da5296-d14c-4ab7-8e7a-b091875a7ed4 | Status: 200 | Processing Time: 213ms
2025-10-29 05:18:06,753 - logging_config - INFO - REQUEST - ID: 4bac1aeb-c132-4872-a11a-86774c15bfcd | User: fdwarren@gmail.com | Method: POST | Path: /execute-sql | Query: {} | Body Size: 971 bytes
2025-10-29 05:18:06,754 - logging_config - INFO - SQL Execution Request - User: fdwarren@gmail.com | SQL: SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_pr...
2025-10-29 05:18:07,875 - logging_config - INFO - SQL Execution Success - User: fdwarren@gmail.com | Rows: 1025
2025-10-29 05:18:08,070 - logging_config - INFO - RESPONSE - ID: 4bac1aeb-c132-4872-a11a-86774c15bfcd | Status: 200 | Processing Time: 1313ms
2025-10-29 05:18:30,674 - logging_config - INFO - REQUEST - ID: e8ed1b03-7e99-4421-9fc7-6a5e965e601f | User: None | Method: OPTIONS | Path: /generate-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:18:30,867 - logging_config - INFO - RESPONSE - ID: e8ed1b03-7e99-4421-9fc7-6a5e965e601f | Status: 200 | Processing Time: 202ms
2025-10-29 05:18:31,068 - logging_config - INFO - REQUEST - ID: 3e7fc473-0cdf-44b2-8d54-ffa3e1eaa7fa | User: fdwarren@gmail.com | Method: POST | Path: /generate-sql | Query: {} | Body Size: 1207 bytes
2025-10-29 05:18:31,071 - logging_config - INFO - SQL Generation Request - User: fdwarren@gmail.com | Query: sort by date descending...
2025-10-29 05:18:31,071 - logging_config - INFO - Request: query='sort by date descending' history=[HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;'), HistoryItem(user_prompt='by county', system_response='SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;'), HistoryItem(user_prompt='round the units', system_response='SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gross_gas_mcf)) AS total_gas_mcf, ROUND(SUM(dp.gross_water_bbl)) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;')]
2025-10-29 05:18:31,072 - core - INFO - History==============: [HistoryItem(user_prompt='show production data', system_response='SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;'), HistoryItem(user_prompt='by county', system_response='SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;'), HistoryItem(user_prompt='round the units', system_response='SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gross_gas_mcf)) AS total_gas_mcf, ROUND(SUM(dp.gross_water_bbl)) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY c.county_name, dp.prod_date;')]
2025-10-29 05:18:31,972 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 200 OK"
2025-10-29 05:18:33,031 - rag - INFO - Prompt: 
        You are an expert SQL generation assistant. You will receive:
        1. A user request in natural language.
        2. Context retrieved from a semantic model (tables, columns, relationships).
        3. The history of the conversation.

        Your task:
        - Generate a **valid SQL query** for the request.
        - Provide a **structured summary** of which columns were used in the query.

        Use **only** the data structures and relationships in the provided schema:

        Table upstream.og_formation (A geological formation that contains hydrocarbons): formation_guid, formation_name
Table upstream.og_county (A county within a state): county_code, county_name, state_code
  FK: upstream.og_county.state_code -> upstream.og_state.state_code
Table upstream.og_daily_forecast (Daily production forecast for a well): well_guid, forecast_date, forecast_oil_bbl, forecast_gas_mcf, forecast_water_bbl
  FK: upstream.og_daily_forecast.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_forecast.forecast_date -> upstream.og_calendar.date
Table upstream.og_production_area (A production area or field within an asset): production_area_guid, production_area_name, asset_guid
  FK: upstream.og_production_area.asset_guid -> upstream.og_asset.asset_guid
Table upstream.og_well (An oil and/or gas well. It may be a producer or an injector.): well_guid, well_name, api_number, spud_date, afe_number, cost_center, well_type, well_status, latitude, longitude, surface_elevation, production_area_guid, county_code, producing_formation_guid, surface_coordinates
  FK: upstream.og_well.production_area_guid -> upstream.og_production_area.production_area_guid
  FK: upstream.og_well.county_code -> upstream.og_county.county_code
  FK: upstream.og_well.producing_formation_guid -> upstream.og_formation.formation_guid
Table upstream.og_daily_production (Daily oil, gas, and water production of a well): well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl
  FK: upstream.og_daily_production.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_production.prod_date -> upstream.og_calendar.date
Table upstream.og_state (A state within the United States): state_code, state_name
Table upstream.og_downtime_type (The type of downtime (e.g. planned, unplanned)): downtime_type_guid, downtime_type_name
Table upstream.og_calendar (Calendar dimension at day grain (one row per date)): date, day_of_month, month, month_name, year, day_of_year, quarter, day_of_week, day_name, week_of_year
Table upstream.og_downtime_reason (The reason for downtime of a well): downtime_reason_guid, downtime_reason_name
Table upstream.og_asset (An asset, region, or division within the company): asset_guid, asset_name
Table upstream.og_daily_downtime (Daily downtime of a well. This information is generally provided by the pumper.): well_guid, downtime_date, downtime_hours, downtime_type_guid, downtime_reason_guid
  FK: upstream.og_daily_downtime.well_guid -> upstream.og_well.well_guid
  FK: upstream.og_daily_downtime.downtime_date -> upstream.og_calendar.date
  FK: upstream.og_daily_downtime.downtime_type_guid -> upstream.og_downtime_type.downtime_type_guid
  FK: upstream.og_daily_downtime.downtime_reason_guid -> upstream.og_downtime_reason.downtime_reason_guid

        Respond **only** in JSON with this schema:

        {
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "title": "SQL Generation Response",
  "type": "object",
  "properties": {
    "sql": {
      "type": "string",
      "description": "The generated SQL query string.",
      "minLength": 1
    }
  },
  "required": ["sql"]
}


        Here is the history of the conversation:
        User: show production data
System: SELECT well_guid, prod_date, gross_oil_bbl, gross_gas_mcf, gross_water_bbl FROM upstream.og_daily_production;
User: by county
System: SELECT c.county_name, dp.prod_date, SUM(dp.gross_oil_bbl) AS total_oil_bbl, SUM(dp.gross_gas_mcf) AS total_gas_mcf, SUM(dp.gross_water_bbl) AS total_water_bbl
FROM upstream.og_daily_production dp
JOIN upstream.og_well w ON dp.well_guid = w.well_guid
JOIN upstream.og_county c ON w.county_code = c.county_code
GROUP BY c.county_name, dp.prod_date
ORDER BY c.county_name, dp.prod_date;
User: round the units
System: SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gross_gas_mcf)) AS total_gas_mcf, ROUND(SUM(dp.gross_water_bbl)) AS total_water_bbl
FROM upstream.og_daily_production dp
JOIN upstream.og_well w ON dp.well_guid = w.well_guid
JOIN upstream.og_county c ON w.county_code = c.county_code
GROUP BY c.county_name, dp.prod_date
ORDER BY c.county_name, dp.prod_date;

        Generate a single SQL query answering:
        'sort by date descending'

        Rules:
        - Use only tables and columns from the schema.
        - Do not invent column names.
        - Do not invent table names.
        - The user request should be mapped to specific tables and columns in the schema.
        - Use case insensitive matching for user provided query parameters.
        - Use explicit JOIN conditions where foreign keys exist.
        - Use postgres compatible syntax.
        - Only use the columns and tables provided in the schema.
        - Return only the SQL query, no other text.
        
2025-10-29 05:18:35,044 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/chat/completions "HTTP/1.1 200 OK"
2025-10-29 05:18:35,046 - core - INFO - Response: { "sql": "SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gross_gas_mcf)) AS total_gas_mcf, ROUND(SUM(dp.gross_water_bbl)) AS total_water_bbl\nFROM upstream.og_daily_production dp\nJOIN upstream.og_well w ON dp.well_guid = w.well_guid\nJOIN upstream.og_county c ON w.county_code = c.county_code\nGROUP BY c.county_name, dp.prod_date\nORDER BY dp.prod_date DESC, c.county_name;" }
2025-10-29 05:18:35,046 - logging_config - INFO - SQL Generation Success - User: fdwarren@gmail.com | Response Type: <class 'dict'>
2025-10-29 05:18:35,232 - logging_config - INFO - RESPONSE - ID: 3e7fc473-0cdf-44b2-8d54-ffa3e1eaa7fa | Status: 200 | Processing Time: 4168ms
2025-10-29 05:18:41,454 - logging_config - INFO - REQUEST - ID: 8f7910df-3e0f-4003-9a9a-7cb1889f09e2 | User: None | Method: OPTIONS | Path: /execute-sql | Query: {} | Body Size: 0 bytes
2025-10-29 05:18:41,642 - logging_config - INFO - RESPONSE - ID: 8f7910df-3e0f-4003-9a9a-7cb1889f09e2 | Status: 200 | Processing Time: 188ms
2025-10-29 05:18:41,841 - logging_config - INFO - REQUEST - ID: 00a22433-73c2-4c4d-b6bd-e0c0313babaa | User: fdwarren@gmail.com | Method: POST | Path: /execute-sql | Query: {} | Body Size: 429 bytes
2025-10-29 05:18:41,851 - logging_config - INFO - SQL Execution Request - User: fdwarren@gmail.com | SQL: SELECT c.county_name, dp.prod_date, ROUND(SUM(dp.gross_oil_bbl)) AS total_oil_bbl, ROUND(SUM(dp.gros...
2025-10-29 05:18:43,066 - logging_config - INFO - SQL Execution Success - User: fdwarren@gmail.com | Rows: 1025
2025-10-29 05:18:43,258 - logging_config - INFO - RESPONSE - ID: 00a22433-73c2-4c4d-b6bd-e0c0313babaa | Status: 200 | Processing Time: 1420ms
2025-10-29 08:00:08,201 - logging_config - INFO - REQUEST - ID: 1cf651cd-8611-439c-8696-4373ea70e3a2 | User: None | Method: OPTIONS | Path: /auth/refresh | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:08,387 - logging_config - INFO - REQUEST - ID: e8237e93-7fd9-4b21-a0c4-70c999300d42 | User: None | Method: OPTIONS | Path: /auth/refresh | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:08,579 - logging_config - INFO - RESPONSE - ID: 1cf651cd-8611-439c-8696-4373ea70e3a2 | Status: 200 | Processing Time: 417ms
2025-10-29 08:00:08,767 - logging_config - INFO - RESPONSE - ID: e8237e93-7fd9-4b21-a0c4-70c999300d42 | Status: 200 | Processing Time: 378ms
2025-10-29 08:00:08,963 - logging_config - INFO - REQUEST - ID: 824e59ab-ba6a-48bc-838f-3949de6ad2bc | User: None | Method: POST | Path: /auth/refresh | Query: {} | Body Size: 193 bytes
2025-10-29 08:00:09,159 - logging_config - INFO - REQUEST - ID: 33d727f9-3b1a-4286-9eec-6cbea7554017 | User: None | Method: POST | Path: /auth/refresh | Query: {} | Body Size: 193 bytes
2025-10-29 08:00:09,348 - logging_config - INFO - RESPONSE - ID: 824e59ab-ba6a-48bc-838f-3949de6ad2bc | Status: 200 | Processing Time: 387ms
2025-10-29 08:00:09,536 - logging_config - INFO - RESPONSE - ID: 33d727f9-3b1a-4286-9eec-6cbea7554017 | Status: 200 | Processing Time: 382ms
2025-10-29 08:00:09,736 - logging_config - INFO - REQUEST - ID: 423bbcc5-f45b-4b84-a830-7ada0e45e995 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:09,927 - logging_config - INFO - REQUEST - ID: e0db8863-a36c-4b83-b6c2-534759bfd490 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:10,124 - logging_config - INFO - RESPONSE - ID: 423bbcc5-f45b-4b84-a830-7ada0e45e995 | Status: 200 | Processing Time: 387ms
2025-10-29 08:00:10,326 - logging_config - INFO - RESPONSE - ID: e0db8863-a36c-4b83-b6c2-534759bfd490 | Status: 200 | Processing Time: 395ms
2025-10-29 08:00:10,531 - logging_config - INFO - REQUEST - ID: 94c0df8d-dd0b-4ebd-8cd0-f035ba3cad73 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:10,727 - logging_config - INFO - REQUEST - ID: e9ad106d-1606-4eb0-bcb4-72b4bf7b66be | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:10,922 - logging_config - INFO - REQUEST - ID: 0129f99e-1800-450e-81d0-929bbddfa257 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:11,131 - logging_config - INFO - REQUEST - ID: 61c16166-b069-402c-a7c7-08d43e321a28 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:11,323 - logging_config - INFO - RESPONSE - ID: 94c0df8d-dd0b-4ebd-8cd0-f035ba3cad73 | Status: 200 | Processing Time: 798ms
2025-10-29 08:00:11,519 - logging_config - INFO - RESPONSE - ID: e9ad106d-1606-4eb0-bcb4-72b4bf7b66be | Status: 200 | Processing Time: 795ms
2025-10-29 08:00:11,536 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 08:00:12,774 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 08:00:12,819 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 08:00:13,012 - logging_config - INFO - RESPONSE - ID: 0129f99e-1800-450e-81d0-929bbddfa257 | Status: 200 | Processing Time: 2091ms
2025-10-29 08:00:13,207 - logging_config - INFO - RESPONSE - ID: 61c16166-b069-402c-a7c7-08d43e321a28 | Status: 200 | Processing Time: 2094ms
2025-10-29 08:00:13,400 - logging_config - INFO - REQUEST - ID: b66b1beb-a4b8-44a0-9e98-d1b80a5d8b06 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:13,590 - logging_config - INFO - REQUEST - ID: 9f193123-840c-4f75-a510-9dd897972689 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:00:13,599 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 08:00:47,510 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 08:00:47,566 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 08:00:47,908 - logging_config - INFO - RESPONSE - ID: b66b1beb-a4b8-44a0-9e98-d1b80a5d8b06 | Status: 200 | Processing Time: 34356ms
2025-10-29 08:00:48,376 - logging_config - INFO - RESPONSE - ID: 9f193123-840c-4f75-a510-9dd897972689 | Status: 200 | Processing Time: 34510ms
2025-10-29 08:04:58,366 - logging_config - INFO - REQUEST - ID: 835a70f2-b215-4a01-a63d-ae6a5980b1ce | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:04:58,754 - logging_config - INFO - REQUEST - ID: 5dd09a50-cd43-4f5a-b4ba-b0133fd16ccb | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:04:58,957 - logging_config - INFO - REQUEST - ID: c25d315b-1161-4f1f-a60e-68e5167fc3d4 | User: None | Method: OPTIONS | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:04:59,409 - logging_config - INFO - REQUEST - ID: d5abe485-b4ff-4e98-bdd1-70cc872daf76 | User: None | Method: OPTIONS | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:04:59,621 - logging_config - INFO - RESPONSE - ID: 835a70f2-b215-4a01-a63d-ae6a5980b1ce | Status: 200 | Processing Time: 1495ms
2025-10-29 08:04:59,811 - logging_config - INFO - RESPONSE - ID: 5dd09a50-cd43-4f5a-b4ba-b0133fd16ccb | Status: 200 | Processing Time: 1255ms
2025-10-29 08:05:00,025 - logging_config - INFO - RESPONSE - ID: c25d315b-1161-4f1f-a60e-68e5167fc3d4 | Status: 200 | Processing Time: 1063ms
2025-10-29 08:05:00,223 - logging_config - INFO - RESPONSE - ID: d5abe485-b4ff-4e98-bdd1-70cc872daf76 | Status: 200 | Processing Time: 1064ms
2025-10-29 08:05:00,427 - logging_config - INFO - REQUEST - ID: cf1368c3-e636-4931-9452-7b21125704d8 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:05:00,622 - logging_config - INFO - REQUEST - ID: e6c59ed3-8272-4453-9fd7-fd702ea60646 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:05:00,631 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 08:05:02,491 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 08:05:02,559 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 08:05:02,744 - logging_config - INFO - RESPONSE - ID: cf1368c3-e636-4931-9452-7b21125704d8 | Status: 200 | Processing Time: 2332ms
2025-10-29 08:05:02,949 - logging_config - INFO - RESPONSE - ID: e6c59ed3-8272-4453-9fd7-fd702ea60646 | Status: 200 | Processing Time: 2325ms
2025-10-29 08:05:03,144 - logging_config - INFO - REQUEST - ID: 0c6abd8a-4a2c-4632-81fe-96ee94177a15 | User: fdwarren@gmail.com | Method: GET | Path: /list-queries | Query: {} | Body Size: 0 bytes
2025-10-29 08:05:03,337 - logging_config - INFO - REQUEST - ID: 5bda34c4-f449-452b-9f1f-ec6e4bcae486 | User: fdwarren@gmail.com | Method: GET | Path: /list-models | Query: {} | Body Size: 0 bytes
2025-10-29 08:05:03,340 - logging_config - INFO - List Queries Request - User: fdwarren@gmail.com
2025-10-29 08:05:04,290 - logging_config - INFO - Queries retrieved successfully - User: 100722479914769978410 | Count: 1
2025-10-29 08:05:04,346 - logging_config - INFO - List Queries Success - User: fdwarren@gmail.com | Count: 1
2025-10-29 08:05:04,529 - logging_config - INFO - RESPONSE - ID: 0c6abd8a-4a2c-4632-81fe-96ee94177a15 | Status: 200 | Processing Time: 1392ms
2025-10-29 08:05:04,726 - logging_config - INFO - RESPONSE - ID: 5bda34c4-f449-452b-9f1f-ec6e4bcae486 | Status: 200 | Processing Time: 1381ms
